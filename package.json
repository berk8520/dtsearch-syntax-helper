{
  "name": "dtsearchsyntaxhelper",
  "displayName": "dtSearchSyntaxHelper",
  "description": "Advanced syntax highlighting and query tools for dtSearch queries with real-time error detection",
  "version": "0.0.1",
  "publisher": "berk8520",
  "repository": {
    "type": "git",
    "url": "https://github.com/berk8520/dtsearch-syntax-helper.git"
  },
  "bugs": {
    "url": "https://github.com/berk8520/dtsearch-syntax-helper/issues"
  },
  "homepage": "https://github.com/berk8520/dtsearch-syntax-helper#readme",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Programming Languages",
    "Formatters",
    "Linters"
  ],
  "keywords": ["dtSearch", "search", "query", "syntax", "highlighting", "boolean", "proximity"],
  "license": "MIT",
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "dtsearchsyntaxhelper.cleanUpQuery",
        "title": "DT Search: Clean Up Query"
      },
      {
        "command": "dtsearchsyntaxhelper.toggleHighlighting",
        "title": "DT Search: Toggle Syntax Highlighting"
      },
      {
        "command": "dtsearchsyntaxhelper.showOperatorHelp",
        "title": "DT Search: Show Operator Help"
      },
      {
        "command": "dtsearchsyntaxhelper.splitOrSearches",
        "title": "DT Search: Split OR Searches"
      },
      {
        "command": "dtsearchsyntaxhelper.reviewErrors",
        "title": "DT Search: Review Errors"
      },
      {
        "command": "dtsearchsyntaxhelper.jumpToLine",
        "title": "DT Search: Jump to Line"
      },
      {
        "command": "dtsearchsyntaxhelper.refreshQueryTree",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "dtsearchsyntaxhelper.jumpToQueryNode",
        "title": "Jump to Query Node"
      },
      {
        "command": "dtsearchsyntaxhelper.sendLineToTree",
        "title": "DT Search: Send Line to Tree View"
      },
      {
        "command": "dtsearchsyntaxhelper.showOperatorFlow",
        "title": "DT Search: Show Operator Flow Diagram"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "dtsearchsyntaxhelper.cleanUpQuery",
          "when": "editorHasSelection && (resourceExtname == .dt || editorLangId == dtsearch)",
          "group": "dtsearch@1"
        },
        {
          "command": "dtsearchsyntaxhelper.reviewErrors",
          "when": "editorHasSelection && (resourceExtname == .dt || editorLangId == dtsearch)",
          "group": "dtsearch@2"
        },
        {
          "command": "dtsearchsyntaxhelper.splitOrSearches",
          "when": "editorHasSelection && (resourceExtname == .dt || editorLangId == dtsearch)",
          "group": "dtsearch@3"
        },
        {
          "command": "dtsearchsyntaxhelper.showOperatorHelp",
          "when": "resourceExtname == .dt || editorLangId == dtsearch",
          "group": "dtsearch@4"
        },
        {
          "command": "dtsearchsyntaxhelper.sendLineToTree",
          "when": "resourceExtname == .dt || editorLangId == dtsearch",
          "group": "dtsearch@5"
        },
        {
          "command": "dtsearchsyntaxhelper.showOperatorFlow",
          "when": "resourceExtname == .dt || editorLangId == dtsearch",
          "group": "dtsearch@6"
        }
      ],
      "commandPalette": [
        {
          "command": "dtsearchsyntaxhelper.toggleHighlighting",
          "when": "editorLangId == dtsearch"
        },
        {
          "command": "dtsearchsyntaxhelper.showOperatorHelp",
          "when": "editorLangId == dtsearch"
        }
      ],
      "view/title": [
        {
          "command": "dtsearchsyntaxhelper.refreshQueryTree",
          "when": "view == dtsearchQueryTree",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "dtsearchsyntaxhelper.jumpToQueryNode",
          "when": "view == dtsearchQueryTree && viewItem == queryNode"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "dtsearchQueryTree",
          "name": "dtSearch Query Tree",
          "when": "resourceExtname == '.dt' || editorLangId == 'dtsearch'",
          "icon": "$(symbol-structure)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "dtsearchQueryTree",
        "contents": "No dtSearch query detected.\n\nOpen a .dt file or set the language mode to 'dtsearch' to see the query structure.\n\n[Open File](command:workbench.action.files.openFile)"
      }
    ],
    "keybindings": [
      {
        "command": "dtsearchsyntaxhelper.cleanUpQuery",
        "key": "ctrl+shift+f",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "command": "dtsearchsyntaxhelper.splitOrSearches",
        "key": "ctrl+shift+s",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "command": "dtsearchsyntaxhelper.reviewErrors",
        "key": "ctrl+shift+x",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "command": "dtsearchsyntaxhelper.showOperatorHelp",
        "key": "f1",
        "when": "editorLangId == dtsearch"
      }
    ],
    "grammars": [
      {
        "language": "dtsearch",
        "scopeName": "source.dtsearch",
        "path": "./syntaxes/dtsearch.tmLanguage.json"
      }
    ],
    "languages": [
      {
        "id": "dtsearch",
        "aliases": ["DTSearch", "dtsearch", "DTS"],
        "extensions": [".dt", ".DT"],
        "configuration": "./language-configuration.json"
      }
    ],
    "configuration": {
      "title": "dtSearch Syntax Helper",
      "properties": {
        "dtsearch.enableSyntaxHighlighting": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time syntax highlighting for dtSearch queries"
        },
        "dtsearch.highlightNoiseWords": {
          "type": "boolean",
          "default": true,
          "description": "Highlight noise words that are typically ignored by dtSearch"
        },
        "dtsearch.showBalanceErrors": {
          "type": "boolean",
          "default": true,
          "description": "Show red squiggly lines for unbalanced parentheses and quotes"
        },
        "dtsearch.autoCleanupOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Automatically clean up queries when saving .dt files"
        },
        "dtsearch.enableSyntaxValidation": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time syntax validation with error detection and suggestions"
        },
        "dtsearch.enableRainbowBrackets": {
          "type": "boolean",
          "default": true,
          "description": "Enable rainbow coloring for nested parentheses"
        },
        "dtsearch.rainbowBracketColors": {
          "type": "number",
          "default": 12,
          "minimum": 3,
          "maximum": 20,
          "description": "Number of colors to cycle through for rainbow brackets"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.102.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}